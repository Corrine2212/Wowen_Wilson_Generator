{"version":3,"sources":["components/TheWow.js","components/WowList.js","containers/WowContainer.js","App.js","reportWebVitals.js","index.js"],"names":["TheWow","_ref","wow","React","createElement","Fragment","className","id","movie","release_date","director","character","movie_duration","timestamp","full_line","current_wow_in_movie","total_wows_in_movie","src","poster","alt","concat","controls","video","type","WowList","props","wows","map","key","fetchWowData","numWowItems","selectedMovie","url","encodeURIComponent","fetch","then","response","json","catch","error","console","WowContainer","_useState","useState","_useState2","_slicedToArray","wowData","setWowData","_useState3","_useState4","setNumWowItems","_useState5","_useState6","setSelectedMovie","_useState7","_useState8","movies","setMovies","useEffect","data","htmlFor","name","min","max","value","onChange","event","numItems","target","selected","index","onClick","App","href","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f21527e9.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TheWow = ({ wow }) => {\n    return (\n        <>\n            <div className=\"wow-details-wrapper\">\n                <div className=\"wow-card\">\n                    <div id=\"wow-detail-text\">\n                        <div className=\"details-header\">\n                            <p id=\"movie-title\">{wow.movie}</p>\n                            <p id=\"release-date\">{wow.release_date}, <i>dir.</i> {wow.director}</p>\n                        </div>\n\n\n                        <p id=\"wow-details\">\n                            <span>Character:</span> {wow.character}\n                        </p>\n                        <p id=\"wow-details\">\n                            <span>Movie Duration:</span> {wow.movie_duration}\n                        </p>\n                        <p id=\"wow-details\">\n                            <span>Timestamp:</span> {wow.timestamp}\n                        </p>\n                        <p id=\"wow-details\">\n                            <span>Full Line:</span> <i>\"{wow.full_line}\"</i>\n                        </p>\n                        <p id=\"wow-details\">\n                            <span>Current wow in Movie:</span> {wow.current_wow_in_movie}\n                        </p>\n                        <p id=\"wow-details\">\n                            <span>Total wow's in Movie:</span> {wow.total_wows_in_movie}\n                        </p>\n                    </div>\n\n                    <img src={wow.poster} alt={`${wow.movie} poster`} className=\"wow-img\" />\n\n                </div>\n\n                <div id=\"video-wrapper\">\n                    <video controls>\n                        <source src={wow.video[\"1080p\"]} type=\"video/mp4\" />\n                        <source src={wow.video[\"720p\"]} type=\"video/mp4\" />\n                        <source src={wow.video[\"480p\"]} type=\"video/mp4\" />\n                        <source src={wow.video[\"360p\"]} type=\"video/mp4\" />\n                    </video>\n                    <hr/>\n                </div>\n            </div>\n\n        </>\n    );\n};\n\nexport default TheWow;\n\n// import React from \"react\";\n\n// const TheWow = ({ wow }) => {\n//     console.log(wow);\n//     return (\n\n//         <div className=\"wow-card\">\n//             <div className=\"wow-details-wrapper\">\n//                 <hr/>\n//                 <h4>Wow Details:</h4>\n//                 <p id=\"wow-details\">\n//                     <span>Movie:</span> {wow.movie}\n//                 </p>\n//                 <p id=\"wow-details\">\n//                     <span>Release Date:</span> {wow.release_date}\n//                 </p>\n//                 <p id=\"wow-details\">\n//                     <span>Director:</span> {wow.director}\n//                 </p>\n//                 <p id=\"wow-details\">\n//                     <span>Character:</span> {wow.character}\n//                 </p>\n//                 <p id=\"wow-details\">\n//                     <span>Movie Duration:</span> {wow.movie_duration}\n//                 </p>\n//                 <p id=\"wow-details\">\n//                     <span>Timestamp:</span> {wow.timestamp}\n//                 </p>\n//                 <p id=\"wow-details\">\n//                     <span>Full Line:</span> <i>\"{wow.full_line}\"</i>\n//                 </p>\n//                 <p id=\"wow-details\">\n//                     <span>Current wow in Movie:</span> {wow.current_wow_in_movie}\n//                 </p>\n//                 <p id=\"wow-details\">\n//                     <span>Total wow's in Movie:</span> {wow.total_wows_in_movie}\n//                 </p>\n//             </div>\n//             <img src={wow.poster} alt=\"Movie poster\" className=\"wow-img\"></img>\n//                 <video controls>\n//                     <source src={wow.video[\"1080p\"]} type=\"video/mp4\"></source>\n//                 </video>\n//         </div>\n\n//     );\n// };\n\n// export default TheWow;\n","import React from 'react';\nimport TheWow from '../components/TheWow';\n\n\nfunction WowList(props) {\n    const { wows } = props;\n\n    return (\n    <>\n        {wows.map((wow) => (\n        <TheWow key={wow.timestamp} wow={wow} />\n        ))}\n    </>\n    );\n}\n\nexport default WowList;\n\n\n\n\n// import React from 'react';\n// import TheWow from '../components/TheWow';\n\n// const WowList = ({ wows }) => {\n\n//     const wowItems = wows.map((wow) => {\n//             return <TheWow wow={wow} key={wow.movie} />;\n        \n//     });\n    \n\n\n//     return (\n//         <>\n//             <div className=\"wow-list\">{wowItems}</div>\n//         </>\n//     );\n// };\n\n// export default WowList;\n\n\n\n\n// import React, { useState } from 'react';\n// import TheWow from '../components/TheWow';\n\n// const WowList = ({ wows }) => {\n//     const [selectedMovie, setSelectedMovie] = useState(null);\n\n//     const handleChange = (event) => {\n//         setSelectedMovie(event.target.value);\n//     };\n\n//     const filteredWows = selectedMovie\n//         ? wows.filter((wow) => wow.movie === selectedMovie)\n//         : wows;\n\n//     const wowItems = filteredWows.map((wow) => {\n//         return <TheWow wow={wow} key={wow.timestamp} />;\n//     });\n\n//     const movieOptions = [\n//         <option key=\"default\" value=\"\">\n//             Select a Movie\n//         </option>,\n//     ];\n\n//     const movieSet = new Set(wows.map((wow) => wow.movie));\n//     const movieArray = [];\n\n//     for (let movie of movieSet) {\n//         movieArray.push(\n//             <option key={movie} value={movie}>\n//                 {movie}\n//             </option>\n//         );\n//     }\n\n//     movieOptions.push(...movieArray);\n\n//     return (\n//         <>\n//             <div className=\"wow-list\">{wowItems}</div>\n\n//             <div className=\"movie-select-wrapper\">\n//                 <label htmlFor=\"movie-select\">Select a movie:</label>\n//                 <select\n//                     id=\"movie-select\"\n//                     name=\"movie-select\"\n//                     onChange={handleChange}\n//                     value={selectedMovie}\n//                 >\n//                     {movieOptions}\n//                 </select>\n//             </div>\n//         </>\n//     );\n// };\n\n// export default WowList;\n","// uses react hooks, useState and useEffect to manage state and lifecycle methods\n// useState allows components to save and manage state data\n// useEffect performs additional logic after component has rendered. It's triggered once when fetchMovieList function is called\nimport React, { useState, useEffect } from 'react';\nimport WowList from '../components/WowList';\n\n// define fetchWowData function outside of component, accesses the data from api\nconst fetchWowData = (numWowItems, selectedMovie) => {\n    let url = `https://owen-wilson-wow-api.onrender.com/wows/random?results=${numWowItems}`;\n    if (selectedMovie) {\n        url += `&movie=${encodeURIComponent(selectedMovie)}`; // the encodeURIComponent fixed the ampersand issue in movie titles\n    }\n    return fetch(url)\n        .then(response => response.json())\n        .catch(error => console.error(error));\n};\n\n// define fetchMovieList function outside of the component, accesses the movies list from the api\nconst fetchMovieList = () => {\n    return fetch('https://owen-wilson-wow-api.onrender.com/wows/movies')\n        .then(response => response.json())\n        .catch(error => console.error(error));\n};\n\n// defines WowContainer component and the state variables using useState hook\nconst WowContainer = () => {\n    const [wowData, setWowData] = useState([]);\n    const [numWowItems, setNumWowItems] = useState(1); // value set to 1. useState hook returns an array with 2 elements, the first element is the current state value (1). The value gets re rendered when the function is called.\n    const [selectedMovie, setSelectedMovie] = useState(''); \n    const [movies, setMovies] = useState([]); // this sets the list of movies\n\n// useEffect hook fetches wow data when numWowItems or selectedMovie changes\n    useEffect(() => {\n        fetchWowData(numWowItems, selectedMovie)\n            .then(data => setWowData(data));\n    }, [numWowItems, selectedMovie]);\n\n// useEffect hook fetches movie list\n    useEffect(() => {\n        fetchMovieList()\n            .then(data => setMovies(data));\n    }, []);\n\n// all the event handlers\n    const handleNewWowClick = () => {\n        fetchWowData(numWowItems, selectedMovie)\n            .then(data => setWowData(data));\n    };\n\n    const handleNumWowItemsChange = (event) => {\n        const numItems = event.target.value;\n        setNumWowItems(numItems);\n    };\n\n// handleMovieSelect updates the state of selectedMovie based on the selection\n    const handleMovieSelect = (event) => {\n        const selected = event.target.value;\n        setSelectedMovie(selected);\n    };\n\n    return (\n        <>\n            <div id='wow-form-wrapper'>\n                <div>\n                    <label htmlFor=\"numWowItems\">No. of Wows:</label>\n                    <input\n                        type=\"number\"\n                        id=\"numWowItems\"\n                        name=\"numWowItems\"\n                        min=\"1\"\n                        max=\"29\"\n                        value={numWowItems}\n                        onChange={handleNumWowItemsChange}\n                    />\n\n                    <label htmlFor=\"movieSelect\">Select a Movie:</label>\n                    <select id=\"movieSelect\" value={selectedMovie} onChange={handleMovieSelect}>\n                        <option value=\"\">All Movies</option>\n                        {movies.map((movie, index) => (\n                            <option key={index} value={movie}>\n                                {movie}\n                            </option>\n                        ))}\n                    </select>\n                    <button onClick={handleNewWowClick}>WOW ME</button>\n                </div>\n            </div>\n        \n            {/* rendered wowData as props */}\n            {wowData && <WowList wows={wowData} />} \n        </>\n    );\n};\n\nexport default WowContainer;\n","import React from 'react';\nimport WowContainer from './containers/WowContainer'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        {/* <h1>Wowen Wilson</h1> */}\n        <a href='/'><img className='logo' src=\"./1.png\" alt=\"logo\"></img></a>\n      </header>\n      <p id='description'>Get ready to experience the ultimate Owen Wilson “wow” extravaganza! This website is dedicated to all the times the actor has famously exclaimed his signature catchphrase.  With our API generator, you can now enjoy an endless supply of ‘wows’ that are sure to entertain and amuse. Whether you’re a fan of his movies or just love the meme-worthy catchphrase, we have something for everyone. So brace yourself for a wild ride and lets get wowing!</p>\n\n      <WowContainer />\n\n      <footer>\n        <p>Powered by Seagulls</p>\n        <p>&copy;  Wowen Wilson</p>\n      </footer>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}